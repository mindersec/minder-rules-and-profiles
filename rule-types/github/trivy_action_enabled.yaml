---
version: v1
release_phase: alpha
type: rule-type
name: trivy_action_enabled
severity:
  value: medium
context:
  provider: github
description: Verifies that the Trivy action is enabled for the repository and scanning
guidance: |
  Ensure that the Trivy action is enabled for the repository and scanning is performed.

  Trivy is an open source vulnerability scanner for repositories, containers and other
  artifacts provided by Aqua Security. It is used to scan for vulnerabilities in the
  codebase and dependencies. This rule ensures that the Trivy action is enabled for
  the repository and scanning is performed.

  Set it up by adding the following to your workflow:

  ```yaml
  - name: Trivy Scan
    uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # v0.19.0
    with:
      image-ref: ${{ github.repository }}
      format: json
      exit-code: 1
  ```
  
  For more information, see
  https://github.com/marketplace/actions/aqua-security-trivy
def:
  # Defines the section of the pipeline the rule will appear in.
  # This will affect the template used to render multiple parts
  # of the rule.
  in_entity: repository
  # Defines the schema for writing a rule with this rule being checked
  # In this case there are no settings that need to be configured
  rule_schema: {}
  # Defines the configuration for ingesting data relevant for the rule
  ingest:
    type: git
    git:
      branch: main
  # Defines the configuration for evaluating data ingested against the given profile
  eval:
    type: rego
    rego:
      type: deny-by-default
      def: |
        package minder

        default allow := false

        allow {
            # List all workflows
            workflows := file.ls("./.github/workflows")

            # Read all workflows
            some w
            workflowstr := file.read(workflows[w])

            workflow := yaml.unmarshal(workflowstr)

            # Iterate jobs
            job := workflow.jobs[_]

            # Iterate steps
            step := job.steps[_]

            # Check if the step is a trivy action
            startswith(step.uses, "aquasecurity/trivy-action@")
        }
  # Defines the configuration for alerting on the rule
  alert:
    type: security_advisory
    security_advisory: {}
  remediate:
    type: pull_request
    pull_request:
      title: "Add Trivy repository scan configuration"
      body: |
        This is a Minder automated pull request.

        This pull request adds a GitHub actions workflow that runs Trivy to the repository.
      contents:
        - path: .github/workflows/trivy.yml
          action: replace
          content: |
            name: Trivy Scan

            on:
              pull_request:

            jobs:
              trivy-code-security-scan:
                runs-on: ubuntu-latest
                name: Trivy 
                steps:
                  - name: Checkout
                    uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
                  - name: Security Scan
                    uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # v0.19.0
                    with:
                      scan-type: 'fs'
                      scanners: vuln,secret
                      exit-code: 1
                      ignore-unfixed: true