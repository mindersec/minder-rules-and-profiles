---
version: v1
release_phase: alpha
type: rule-type
name: semgrep_secrets_scanning
display_name: Enable Semgrep Pre-commit hooks for detecting secrets
short_failure_message: Semgrep Pre-commit hook is not configured for the repository
severity:
  value: medium
context: {}
description: |
  Verifies that Semgrep Pre-commit hook is configured for the repository
guidance: |
  Likewise, you can configure a hook to run a semgrep scan with the semgrep hook. As an example, the following configuration would scan the files to be committed with a specified config, skipping files with unknown extensions.
  For more information, see the [Semgrep Pre-commit](https://semgrep.dev/docs/secure-guardrails/secure-guardrails-in-semgrep) documentation.
def:
  in_entity: repository
  rule_schema:
    type: object
    properties: {}
  ingest:
    type: git
    git: {}
  eval:
    type: rego
    rego:
      type: deny-by-default
      def: |
        package minder
        import future.keywords.if
        import future.keywords.every

        default message := "Semgrep pre-commit hook is not configured for the repository"
        default allow := false

        
        # pre-commit hook
        precommit := file.read(".pre-commit-config.yaml")
        
        parsed_data := parse_yaml(precommit)

        allow if {
          some repo_id, hook_id
          repo_data := parsed_data.repos[repo_id]
          endswith(repo_data["repo"], "https://github.com/semgrep/pre-commit")
          semgrep_hooks = repo_data["hooks"]
          semgrep_hooks[hook_id].id == "semgrep"
        }

        message := "" if allow
  alert:
    type: security_advisory
    security_advisory: {}