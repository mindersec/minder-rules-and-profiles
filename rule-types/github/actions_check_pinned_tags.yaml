---
version: v1
release_phase: beta
type: rule-type
name: actions_check_pinned_tags
display_name: Ensure immutable version of GitHub action
severity:
  value: medium
context:
  provider: github
description: Verifies that any actions use pinned tags
guidance: |
  Please change the action to use a pinned SHA-1 hash instead of a
  tag.

  Pinning an action to a full length commit SHA is currently the only
  way to use an action as an immutable release. Pinning to a
  particular SHA helps mitigate the risk of a bad actor adding a
  backdoor to the action's repository, as they would need to generate
  a SHA-1 collision for a valid Git object payload.  When selecting a
  SHA, you should verify it is from the action's repository and not a
  repository fork.

  For more information, see [GitHub's
  documentation](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions).
def:
  # Defines the section of the pipeline the rule will appear in.
  # This will affect the template used to render multiple parts
  # of the rule.
  in_entity: repository
  # Defines the schema for writing a rule with this rule being checked
  # In this case there are no settings that need to be configured
  rule_schema:
    type: object
    properties:
      exclude:
        type: array
        items:
          type: string
        description: |
          Exclude actions from being checked and remediated. Useful for actions that don't support SHA pinning such
          as slsa-github-generator. Use the full owner/action format here, e.g. actions/checkout
  # Defines the configuration for ingesting data relevant for the rule
  ingest:
    type: git
    git: {}
  # Defines the configuration for evaluating data ingested against the given profile
  # This example uses the checks for that GitHub actions are using pinned tags
  # for the use directive, in the form of SHA-1 hash.
  # For example, this wil fail:
  # uses: actions/checkout@v2
  # This will pass:
  # uses: actions/checkout@f3d2b746c498f2d3d1f2d3d1f2d3d1f2d3d1f2d3
  eval:
    type: rego
    rego:
      type: constraints
      def: |
        package minder

        is_excluded(action, excludes) {
          some i
          action == excludes[i]
        }

        violations[{"msg": msg}] {
          # List all workflows
          workflows := file.ls("./.github/workflows")

          # Read all workflows
          some w
          workflowstr := file.read(workflows[w])

          # Parse the YAML content
          workflow := yaml.unmarshal(workflowstr)

          # Iterate over all jobs and steps in the current workflow
          some job_name
          job_steps := workflow.jobs[job_name].steps

          # Ensure each step uses a SHA-1 hash
          some step_num
          s := job_steps[step_num]

          # Check if the step has a uses directive
          not is_null(s.uses)

          # Skip if the full name of the action is part of excludes
          not is_excluded(s.uses, input.profile.exclude)

          # Split the uses directive at '@'
          parts := split(s.uses, "@")

          # Skip if the action name is part of excludes
          not is_excluded(parts[0], input.profile.exclude)

          # Check if the string after '@' is 40 characters long (SHA-1 hash length)
          count(parts[1]) != 40

          # All characters should be hexadecimal
          not regex.match(`^[a-fA-F0-9]+$`, parts[1])
          msg := sprintf("Workflow '%v' uses an unpinned action '%v' in job '%v' step '%v'", [workflows[w], s.uses, job_name, step_num])
        }
  remediate:
    type: pull_request
    pull_request:
      title: "Replace unpinned actions with pinned action"
      body: |
        This is a Minder automated pull request.

        This pull request replaces references to actions by tag to references to actions by SHA.

        Verifies that any actions use pinned tags
        Pinning an action to a full length commit SHA is currently the only way to use
        an action as an immutable release. Pinning to a particular SHA helps mitigate
        the risk of a bad actor adding a backdoor to the action's repository, as they
        would need to generate a SHA-1 collision for a valid Git object payload.
        When selecting a SHA, you should verify it is from the action's repository
        and not a repository fork.

        For more information, see
        https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions
      method: minder.actions.replace_tags_with_sha
  # Defines the configuration for alerting on the rule
  alert:
    type: security_advisory
    security_advisory: {}
