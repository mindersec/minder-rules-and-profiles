---
version: v1
release_phase: alpha
type: rule-type
name: talisman_secrets_scanning
display_name: Enable Talisman Pre-commit hooks for detecting secrets
short_failure_message: Talisman Pre-commit hook is not configured for the repository
severity:
  value: medium
context: {}
description: |
  Verifies that Talisman Pre-commit hook is configured via a GitHub action for the repository
guidance: |
  Ensure that Talisman is configured pre-commit hook for the repository.
  Talisman validates the outgoing changeset for things that look suspicious â€” such as tokens, passwords, and private keys.
  For more information, see the [GitHub Talisman Pre-commit](https://github.com/thoughtworks/talisman?tab=readme-ov-file#pre-commit) documentation.
def:
  in_entity: repository
  rule_schema:
    type: object
    properties: {}
  ingest:
    type: git
    git: {}
  eval:
    type: rego
    rego:
      type: deny-by-default
      def: |
        package minder
        import future.keywords.if
        import future.keywords.every

        default message := "Talisman pre-commit hook is not configured for the repository"
        default allow := false

        
        # pre-commit hook
        precommit := file.read(".pre-commit-config.yaml")
        
        parsed_data := parse_yaml(precommit)

         allow if {
          some repo_id, hook_id
          repo_data := parsed_data.repos[repo_id]
          endswith(repo_data["repo"], "https://github.com/thoughtworks/talisman")
          talisman_hooks = repo_data["hooks"]
          talisman_hooks[hook_id].id == "talisman-commit"
          talisman_hooks[hook_id].entry == "cmd --githook pre-commit"
        }

        message := "" if allow
  alert:
    type: security_advisory
    security_advisory: {}