---
# Stacklok health check profile.
version: v1
type: profile
name: stacklok-health-check
display_name: Stacklok Health Check
context:
  provider: github
alert: "off"
remediate: "off"
repository:
  - type: secret_scanning
    name: "Secret Scanning is enabled"
    def:
      skip_private_repos: true
  - type: secret_push_protection
    name: "Secret push protection is enabled"
    def:
      skip_private_repos: true
  - type: actions_check_pinned_tags
    name: "GitHub Actions workflows reference pinned tags"
    def:
      exclude:
        # generator_generic_slsa3 does not support pinning and will fail to retrieve the
        # generator binary. We need to exclude it from pinning because of this.
        # See https://github.com/slsa-framework/slsa-github-generator/issues/2993
        - slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml
  - type: branch_protection_allow_force_pushes
    name: "Branch Protection disallows force pushes"
    def: {}
    params:
      branch: ""
  - type: branch_protection_require_pull_request_dismiss_stale_reviews
    name: "Branch protection dismisses stale reviews on PR"
    def:
      dismiss_stale_reviews: true
    params:
      branch: ""
  - type: default_workflow_permissions
    name: "GitHub Actions workflows have limited permissions"
    def:
      default_workflow_permissions: read
      can_approve_pull_request_reviews: false
  - type: dependabot_configured
    name: "Dependabot is configured for Go projects"
    def:
      package_ecosystem: gomod
      schedule_interval: ""
      apply_if_file: go.mod
  - type: dependabot_configured
    name: "Dependabot is configured for JavaScript projects"
    def:
      package_ecosystem: npm
      schedule_interval: ""
      apply_if_file: package.json
  - type: dependabot_configured
    name: "Dependabot is configured for Python projects"
    def:
      package_ecosystem: pip
      schedule_interval: ""
      apply_if_file: requirements.txt
  - type: dockerfile_no_latest_tag
    name: "Dockerfiles reference specific tags"
    def: {}
